{
  "hash": "4f0b9bdf422d93dd91251264ba283692",
  "result": {
    "markdown": "---\ntitle: \"Overview data\"\nauthor: \"Karen C. Goncalves dos Santos\"\ncallout-appearance: simple\ndate: \"1 November 2023\"\nformat: html\ncategories:\n  - \"R basics\"\n  - Summarize\n---\n\n<style>\ncode{\n\tfont-size:1.1em;\n\tcolor:yellow;\n\tbackground-color:#2b2b2b;\n\tborder-radius:.25rem;\n\tpadding:.125rem .25rem;\n\tword-wrap:break-word\n}\n\ncode span {font-size: 1.1em}\ncode span.fu {color: yellow}\n\n</style>\n\n\n\n## `str`, `summary` and other functions\n\n### `str`\n\nSee data structure. Shows number of rows and columns in a data frame, classes of the columns, first few elements of each column.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t150 obs. of  5 variables:\n $ Sepal.Length: num  5.1 4.9 4.7 4.6 5 5.4 4.6 5 4.4 4.9 ...\n $ Sepal.Width : num  3.5 3 3.2 3.1 3.6 3.9 3.4 3.4 2.9 3.1 ...\n $ Petal.Length: num  1.4 1.4 1.3 1.5 1.4 1.7 1.4 1.5 1.4 1.5 ...\n $ Petal.Width : num  0.2 0.2 0.2 0.2 0.2 0.4 0.3 0.2 0.2 0.1 ...\n $ Species     : Factor w/ 3 levels \"setosa\",\"versicolor\",..: 1 1 1 1 1 1 1 1 1 1 ...\n```\n:::\n:::\n\n\n:::{.callout-note} \nYou can add the option \"max.level = X\" if you know the object is nested (list inside of list inside of list) so that you don't print too many nested levels.\n:::\n\n### `head` or `tail`\n\nShows the beginning or the end of an object (you can specify the number of lines printed with `n = X`)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(iris, n = 7)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n6          5.4         3.9          1.7         0.4  setosa\n7          4.6         3.4          1.4         0.3  setosa\n```\n:::\n\n```{.r .cell-code}\ntail(iris, n = 3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Sepal.Length Sepal.Width Petal.Length Petal.Width   Species\n148          6.5         3.0          5.2         2.0 virginica\n149          6.2         3.4          5.4         2.3 virginica\n150          5.9         3.0          5.1         1.8 virginica\n```\n:::\n:::\n\n\n## `summary`\n\nPrint column-wise info about data frames, shows relevant data from tests, such as `aov` or t.test.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  Sepal.Length    Sepal.Width     Petal.Length    Petal.Width   \n Min.   :4.300   Min.   :2.000   Min.   :1.000   Min.   :0.100  \n 1st Qu.:5.100   1st Qu.:2.800   1st Qu.:1.600   1st Qu.:0.300  \n Median :5.800   Median :3.000   Median :4.350   Median :1.300  \n Mean   :5.843   Mean   :3.057   Mean   :3.758   Mean   :1.199  \n 3rd Qu.:6.400   3rd Qu.:3.300   3rd Qu.:5.100   3rd Qu.:1.800  \n Max.   :7.900   Max.   :4.400   Max.   :6.900   Max.   :2.500  \n       Species  \n setosa    :50  \n versicolor:50  \n virginica :50  \n                \n                \n                \n```\n:::\n:::\n\n\n## Dimensions\n\n- `dim(x)` \n\t- Dimensions of a dataset: For a data frame it is c(1, 2), for a vector it is c(1).\n-`length(x)` \n\t- number of elements in a vector, or columns in a data frame or elements in a list\n- `ncol` or `nrow` \n\t- number of columns/rows in a data frame\n- `names` \n\t- Names of columns of a data frame\n\t- Names of objects in a named list or named vector\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 150   5\n```\n:::\n\n```{.r .cell-code}\nlength(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n\n```{.r .cell-code}\nlength(iris[,1])\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 150\n```\n:::\n\n```{.r .cell-code}\nncol(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n\n```{.r .cell-code}\nnrow(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 150\n```\n:::\n\n```{.r .cell-code}\nnames(iris)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Sepal.Length\" \"Sepal.Width\"  \"Petal.Length\" \"Petal.Width\"  \"Species\"     \n```\n:::\n\n```{.r .cell-code}\nmy_numbers = 1:3; names(my_numbers) = c(\"A\", \"B\", \"C\")\nnames(my_numbers)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"A\" \"B\" \"C\"\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}