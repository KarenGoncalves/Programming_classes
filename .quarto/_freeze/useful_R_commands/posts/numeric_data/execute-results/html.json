{
  "hash": "99a6e1b15a7072f4bce250120058d8da",
  "result": {
    "markdown": "---\ntitle: \"Working with numbers\"\nauthor: \"Karen C. Goncalves dos Santos\"\ncallout-appearance: simple\ndate: \"2 October 2023\"\ncategories:\n  - \"R basics\"\n  - Numbers\n  - Summarize\nformat: html\n---\n\n\nFunctions for numeric data\n\n## Sum, mean and median\n\nYou can obtain the sum, mean and median by calling the functions `sum()`, `mean()`, `median()`, respectively.\nYou need to include `na.rm=T` to obtain the estimate when you have missing values in the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnumeric_vector = c(iris$Sepal.Length, NA, NA)\nsum(numeric_vector)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA\n```\n:::\n\n```{.r .cell-code}\nsum(numeric_vector, na.rm = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 876.5\n```\n:::\n\n```{.r .cell-code}\nmedian(numeric_vector)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA\n```\n:::\n\n```{.r .cell-code}\nmedian(numeric_vector, na.rm = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5.8\n```\n:::\n\n```{.r .cell-code}\nmean(numeric_vector)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA\n```\n:::\n\n```{.r .cell-code}\nmean(numeric_vector, na.rm = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5.843333\n```\n:::\n:::\n\n\n## Standard deviation, variance and interquantile range\n\nFor the data dispersion, you can use the functions `sd()` (standard deviation), `var()` (variance) and `IQR()` (interquantile range). Remember to use `na.rm=T`.\n\n:::{.callout-note}\n# Variance calculation\n\nVariance = $\\sum$ $( x - mean )^2$  / _N_\n\nWhere \n\n- _x_ is each and every value of the input vector\n- _mean_ is the mean of the input vector\n- _N_ is the length of the input vector \n:::\n\n:::{.callout-note}\n\n# Standard deviation calculation\n\nStd.Dev = $\\sqrt{Variance}$\n:::\n\n:::{.callout-note}\n# Interquantile range calculation\n`IQR(x) = quantile(x, 3/4) - quantile(x, 1/4)`\n\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnumeric_vector = c(iris$Sepal.Length, NA, NA)\nsd(numeric_vector)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA\n```\n:::\n\n```{.r .cell-code}\nsd(numeric_vector, na.rm = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.8280661\n```\n:::\n\n```{.r .cell-code}\nvar(numeric_vector)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] NA\n```\n:::\n\n```{.r .cell-code}\nvar(numeric_vector, na.rm = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.6856935\n```\n:::\n\n```{.r .cell-code}\n#IQR(numeric_vector) Not accepted when there are NA values\nIQR(numeric_vector, na.rm = T)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1.3\n```\n:::\n:::\n\n\n\n### Column-wise and row-wise summaries\n\nYou can calculate the sum and mean for each row/column of a numeric data frame with the functions:\n\n- Sum: `colSums` and `rowSums`/`rowsum`\n- Mean: `colMeans` and `rowMeans`\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}