{"title":"Running Jobs","markdown":{"yaml":{"title":"Running Jobs","subtitle":"Using the Digital Research Alliance of Canada","date":"2023-01-30","author":"Karen Cristine Goncalves, Ph.D.","description":"3rd unix class","fontsize":"1.5em","linkcolor":"grey","callout-appearance":"simple","categories":["Unix","Unix basics","Server"],"format":{"revealjs":{"transition":"none","theme":"dark","scrollable":true}}},"headingText":"Run jobs","containsRefs":false,"markdown":"\n\n<!-- <style> -->\n<!-- .code { -->\n<!-- background-color: grey; -->\n<!-- color: white; -->\n<!-- font-size: 1.5em -->\n<!-- } -->\n\n<!-- li { -->\n<!-- line-height: 2em -->\n<!-- } -->\n<!-- </style> -->\n\n\nCannot run/execute any of those commands from ` ~ `\n\nThe three possibilities:\n\n- `srun` - Use to submit a script to be executed in real time (the process of running the job will be printed in the screen instead of saved into a file)\n- `sbatch` - Use to submit a script to be executed later\n- `salloc` - Use to `alloc`ate resources for a job in real time. \n\t- Basically, you ask for memory and CPUS  for a determinate amount of time and when the \"allocate\" the resources to you, you work in real time in a computer more potent than yours.\n\n\n\n## Run jobs - srun \n\n<span class=\"code\">`srun NEEDED_INFO script/command`</span>\n\n- Before running `srun`, need to load software required need to the session \n\t- Adding `module load software` to the script does not work\n- Information needed\n\t- <span class=\"code\">`--account=acount_name`</span>  -  <span class=\"code\">`def-laboidp`</span>  or  <span class=\"code\">`def-desgagne`</span>  or  <span class=\"code\">`def-germain1`\n\t- <span class=\"code\">`--time=d-HH:MM:SS`</span> - time required for the script, eg. 12hs: `--time=12:00:00`\n\t- <span class=\"code\">`--mem=1G`</span> - memory required (here, 1G, default 254M)\n\n## srun - exammple \n\n### <b>\n<div class=\"code\">\n```\nmodule load StdEnv/2020 blast+ # load the softwares\ncd $SCRATCH\n\nsrun --account=def-desgagne --time=01:00:00 --mem=1024M\\\n blastp -query prots.fasta\\\n -db $myDatabase\\\n -out prots_Databased.txt\\\n -outfmt '7' # output in table format\n```\n</div></b>\n\n- The file ` prots.fasta ` is in the current folder, or its path is given in full\n\t- same for the output ` prots_Database.txt `\n- When you use ` \\ ` to separate one command in several lines, add a space in the next line to separate the words\n\n## Note on blast\n\n- ` $myDatabase ` \n\t- Add the full path, without the extension\n\t- Use right type of database (the first letter of the extension indicates the type of database)\n\t\t- ` .p* ` - protein database\n\t\t- ` .n* ` - nucleotide database\n\n## Run jobs - sbatch \n\n\n<span class=\"code\">`sbatch script`</span> or <span class=\"code\">`sbatch NEEDED_INFO script`</span> \n\n- Used to submit a script to be executed later.\n- Essentials for the script:\n\t- First line indicates the program that translates the script to computer language: <span class=\"code\">`#!/bin/sh`</span>\n\t- Lines starting with `#SBATCH` tell the scheduler what we need for this job\n\t\n## sbatch - script example\n\n### <b>\n<div class=\"code\">\n```\n#!/bin/sh\n#SBATCH --account=def-desgagne\n#SBATCH --time=01:00:00 \n#SBATCH --mem=1024M\n\nmodule load StdEnv/2020 blast+\n\nmyDatabase=/database/path\n\ncd $SCRATCH\n\nblastp -query prots.fasta\\\n -db $myDatabase\\\n -out prots_Databased.txt\\\n -outfmt '7' # output in table format\n```\n</div></b>\n\n- Note that here the \"module load\" line is INSIDE the script\n\n## Run jobs - salloc \n\nsalloc - <span class=\"code\">`salloc NEEDED_INFO`</span> \n\n- Used to allocate resources for a job in real time. \n- Basically, you ask for memory and CPUS  for a determinate amount of time and when the \"allocate\" the resources to you, you work in real time in a computer more potent than yours.\n\n## Resources\n\n- [How to run jobs](https://docs.alliancecan.ca/wiki/Running_jobs)\n","srcMarkdownNoYaml":"\n\n<!-- <style> -->\n<!-- .code { -->\n<!-- background-color: grey; -->\n<!-- color: white; -->\n<!-- font-size: 1.5em -->\n<!-- } -->\n\n<!-- li { -->\n<!-- line-height: 2em -->\n<!-- } -->\n<!-- </style> -->\n\n## Run jobs \n\nCannot run/execute any of those commands from ` ~ `\n\nThe three possibilities:\n\n- `srun` - Use to submit a script to be executed in real time (the process of running the job will be printed in the screen instead of saved into a file)\n- `sbatch` - Use to submit a script to be executed later\n- `salloc` - Use to `alloc`ate resources for a job in real time. \n\t- Basically, you ask for memory and CPUS  for a determinate amount of time and when the \"allocate\" the resources to you, you work in real time in a computer more potent than yours.\n\n\n\n## Run jobs - srun \n\n<span class=\"code\">`srun NEEDED_INFO script/command`</span>\n\n- Before running `srun`, need to load software required need to the session \n\t- Adding `module load software` to the script does not work\n- Information needed\n\t- <span class=\"code\">`--account=acount_name`</span>  -  <span class=\"code\">`def-laboidp`</span>  or  <span class=\"code\">`def-desgagne`</span>  or  <span class=\"code\">`def-germain1`\n\t- <span class=\"code\">`--time=d-HH:MM:SS`</span> - time required for the script, eg. 12hs: `--time=12:00:00`\n\t- <span class=\"code\">`--mem=1G`</span> - memory required (here, 1G, default 254M)\n\n## srun - exammple \n\n### <b>\n<div class=\"code\">\n```\nmodule load StdEnv/2020 blast+ # load the softwares\ncd $SCRATCH\n\nsrun --account=def-desgagne --time=01:00:00 --mem=1024M\\\n blastp -query prots.fasta\\\n -db $myDatabase\\\n -out prots_Databased.txt\\\n -outfmt '7' # output in table format\n```\n</div></b>\n\n- The file ` prots.fasta ` is in the current folder, or its path is given in full\n\t- same for the output ` prots_Database.txt `\n- When you use ` \\ ` to separate one command in several lines, add a space in the next line to separate the words\n\n## Note on blast\n\n- ` $myDatabase ` \n\t- Add the full path, without the extension\n\t- Use right type of database (the first letter of the extension indicates the type of database)\n\t\t- ` .p* ` - protein database\n\t\t- ` .n* ` - nucleotide database\n\n## Run jobs - sbatch \n\n\n<span class=\"code\">`sbatch script`</span> or <span class=\"code\">`sbatch NEEDED_INFO script`</span> \n\n- Used to submit a script to be executed later.\n- Essentials for the script:\n\t- First line indicates the program that translates the script to computer language: <span class=\"code\">`#!/bin/sh`</span>\n\t- Lines starting with `#SBATCH` tell the scheduler what we need for this job\n\t\n## sbatch - script example\n\n### <b>\n<div class=\"code\">\n```\n#!/bin/sh\n#SBATCH --account=def-desgagne\n#SBATCH --time=01:00:00 \n#SBATCH --mem=1024M\n\nmodule load StdEnv/2020 blast+\n\nmyDatabase=/database/path\n\ncd $SCRATCH\n\nblastp -query prots.fasta\\\n -db $myDatabase\\\n -out prots_Databased.txt\\\n -outfmt '7' # output in table format\n```\n</div></b>\n\n- Note that here the \"module load\" line is INSIDE the script\n\n## Run jobs - salloc \n\nsalloc - <span class=\"code\">`salloc NEEDED_INFO`</span> \n\n- Used to allocate resources for a job in real time. \n- Basically, you ask for memory and CPUS  for a determinate amount of time and when the \"allocate\" the resources to you, you work in real time in a computer more potent than yours.\n\n## Resources\n\n- [How to run jobs](https://docs.alliancecan.ca/wiki/Running_jobs)\n"},"formats":{"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.3.450","auto-stretch":true,"title-block-banner":true,"title":"Running Jobs","subtitle":"Using the Digital Research Alliance of Canada","date":"2023-01-30","author":"Karen Cristine Goncalves, Ph.D.","description":"3rd unix class","fontsize":"1.5em","linkcolor":"grey","callout-appearance":"simple","categories":["Unix","Unix basics","Server"],"transition":"none","theme":"dark","scrollable":true}}},"projectFormats":["html"]}