{"title":"AWK command","markdown":{"yaml":{"title":"AWK command","date":"2023-02-13","description":"5th unix class","fontsize":"1.5em","linkcolor":"grey","callout-appearance":"simple","categories":["Unix basics"],"format":{"revealjs":{"transition":"none","theme":"dark","scrollable":true}},"author":"Karen Cristine Goncalves, Ph.D."},"headingText":"AWK - print specific columns","containsRefs":false,"markdown":"\n\n<!-- <style> -->\n<!-- .code { -->\n<!-- background-color: grey; -->\n<!-- color: white; -->\n<!-- font-size: 1.5em -->\n<!-- } -->\n\n<!-- li { -->\n<!-- line-height: 2em -->\n<!-- } -->\n<!-- </style> -->\n\n\n- Always put commands inside single quotes <span class=\"code\">`''`</span>\n- Use <span class=\"code\">`{print}`</span> to indicate lines or columns you want to see\n- Indicate a column number using <span class=\"code\">`$N`</span> (replace N with the number)\n- If you want to see several columns, separate them with a <span class=\"code\">`,`</span>: \n\t- <span class=\"code\">`{print $N,$X}`</span>\n- To indicate the whole line, use <span class=\"code\">`$0`</span>\n\n## AWK - print specific columns\n\n\n```\n# Print second column of the file blastp_results.txt\nawk '{print $2}' blastp_results.txt\n# Print second and third columns of the file blastp_results.txt\nawk '{print $2,$3}' blastp_results.txt\n```\n\n## AWK - print line with specific word\n\nInside the <span class=\"code\">`''`</span> add the word your searching for in <span class=\"code\">`//`</span>\n\n```\n# Print lines containing \"#\" in blastp_results.txt\nawk '/#/ {print}' blastp_results.txt\n\n# Print lines NOT containing \"#\" in blastp_results.txt\nawk '!/#/ {print}' blastp_results.txt\n```\n\n- Note that when you do not specify the column, or when you use <span class=\"code\">`$0`</span>, you print the whole line\n\n## AWK - indicate how to read the input and write the output\n\n- NR - number of records (normally number of lines): \n\t- <span class=\"code\">`awk 'NR > 1 {print}' blastp_results.txt`</span>\n\t\t- will print all but the first line\n\t- <span class=\"code\">`awk 'NR == 1 {print $1} NR > 1 {print $2}' blastp_results.txt`</span>\n\t\t-  will print the first column for line 1 and the second column for the other lines\n- NF - number of fields (normally columns):\n\t- <span class=\"code\">`awk '{print $NF}' blastp_results.txt`</span>\n\t\t- will print the last column the file\n\n\n## AWK - indicate how to read the input and write the output\n\nNote the these can be specified by adding `BEGIN {}`:\n\n- FS - field separator - column delimiter\n\t- <span class=\"code\">`awk 'BEGIN {FS=\",\"} {print $2}' blastp_results.csv`</span>\n\t\t- Indicates the columns in the file blastp_results.csv are separated by commas and asks for the second column\n\t\t- Outside the `''` <span class=\"code\">`-F\",\"`</span> or <span class=\"code\">`--field-separator=\",\"`</span> are the same\n- OFS - output field separator - column delimiter for the output\n\t- <span class=\"code\">`awk 'BEGIN {OFS=\",\"} {print $1,$2,$3}' blastp_results.txt`</span>\n\t\t- Changes the separation of columns from space (default for awk) to commas\n\n## AWK - indicate how to read the input and write the output\n\nNote the these can be specified by adding `BEGIN {}`:\n\n- RS - record separator\n\t- <span class=\"code\">`awk 'BEGIN {RS=\">\"} {print $1}' myFasta.fasta`</span>\n\t\t- Tells awk that new entries are indicated with a \">\" symbol\n- ORS - record separator for the output\n\t- <span class=\"code\">`awk 'BEGIN {ORS=\">\"} {print $1}' myFasta.txt`</span>\n\t\t- Tells awk that new entries in the output will start with the \">\" symbol\n\n## AWK example\n\n- Sequence length\n\n```\nawk 'BEGIN {FS = \"\\n\"; RS=\">\"}\\\n {print $1, length($2)}' ~/blastClass/myFasta.fasta\n```\n\n\n## AWK example\n\n- Change fasta to a table format\n\n```\nawk 'BEGIN {FS = \"\\n\"; RS=\">\";\\\n OFS=\"\\t\"; ORS=\"\\n\"}\\\n {print $1,$2}' ~/blastClass/myFasta.fasta\n```\n\n\n## AWK - replace word\n\n- Replace the letter N in the sequence line by `'*'`\n\n```\nawk 'BEGIN {FS = \"\\n\"; RS=\">\"}\\\n {newSeq=gensub(/N/, \"*\", $2); print $1, newSeq}' ~/blastClass/myFasta.fasta\n```\n\n## AWK - print with one condition\n\n- Conditions inside `{}` come after `if` and inside `()` OR they go outside the `{}`\n\n```\n# Print line if column 3 has a value greater than 80\nawk '{if ($3 > 80) print}' ~/blastClass/myFasta.fasta\n```\n\n- Or they go outside the `{}`\n\n```\n# Print line if column 3 has a value greater than 80\nawk '$3 > 80 {print}' ~/blastClass/myFasta.fasta\n```\n\n## AWK - print with multiple conditions \n\n- When the conditions must all be met, separate them with `&&`\n\n### <b>\n<div class=\"code\">\n```\n# Print line if column 3 has a value greater than 80 AND column 4 has a value greater than 150\nawk '{if ($3 > 80 && $4 > 150) print}' ~/blastClass/myFasta.fasta\n\t\n# This also gives the same result\nawk '$3 > 80 && $4 > 150 {print}' ~/blastClass/myFasta.fasta\n```\n</div></b>\n\n\n## AWK - print with multiple conditions \n\n- When only one condition must be met, separate them with `||`\n\n```\n# Print line if column 3 has a value greater than 80 OR column 4 has a value greater than 150\nawk '{if ($3 > 80 || $4 > 150) print}' ~/blastClass/myFasta.fasta\n\nawk '$3 > 80 || $4 > 150 { print }' ~/blastClass/myFasta.fasta\n```\n\n\n## Resources \n\n- [AWK manual](https://www.gnu.org/software/gawk/manual/html_node/Options.html)\n- [AWK examples](https://www.geeksforgeeks.org/awk-command-unixlinux-examples/)\n- [AWK cheatsheet](https://www.shortcutfoo.com/app/dojos/awk/cheatsheet)\n- [AWK - working with text](https://www.tutorialspoint.com/awk/awk_string_functions.htm)\n","srcMarkdownNoYaml":"\n\n<!-- <style> -->\n<!-- .code { -->\n<!-- background-color: grey; -->\n<!-- color: white; -->\n<!-- font-size: 1.5em -->\n<!-- } -->\n\n<!-- li { -->\n<!-- line-height: 2em -->\n<!-- } -->\n<!-- </style> -->\n\n## AWK - print specific columns\n\n- Always put commands inside single quotes <span class=\"code\">`''`</span>\n- Use <span class=\"code\">`{print}`</span> to indicate lines or columns you want to see\n- Indicate a column number using <span class=\"code\">`$N`</span> (replace N with the number)\n- If you want to see several columns, separate them with a <span class=\"code\">`,`</span>: \n\t- <span class=\"code\">`{print $N,$X}`</span>\n- To indicate the whole line, use <span class=\"code\">`$0`</span>\n\n## AWK - print specific columns\n\n\n```\n# Print second column of the file blastp_results.txt\nawk '{print $2}' blastp_results.txt\n# Print second and third columns of the file blastp_results.txt\nawk '{print $2,$3}' blastp_results.txt\n```\n\n## AWK - print line with specific word\n\nInside the <span class=\"code\">`''`</span> add the word your searching for in <span class=\"code\">`//`</span>\n\n```\n# Print lines containing \"#\" in blastp_results.txt\nawk '/#/ {print}' blastp_results.txt\n\n# Print lines NOT containing \"#\" in blastp_results.txt\nawk '!/#/ {print}' blastp_results.txt\n```\n\n- Note that when you do not specify the column, or when you use <span class=\"code\">`$0`</span>, you print the whole line\n\n## AWK - indicate how to read the input and write the output\n\n- NR - number of records (normally number of lines): \n\t- <span class=\"code\">`awk 'NR > 1 {print}' blastp_results.txt`</span>\n\t\t- will print all but the first line\n\t- <span class=\"code\">`awk 'NR == 1 {print $1} NR > 1 {print $2}' blastp_results.txt`</span>\n\t\t-  will print the first column for line 1 and the second column for the other lines\n- NF - number of fields (normally columns):\n\t- <span class=\"code\">`awk '{print $NF}' blastp_results.txt`</span>\n\t\t- will print the last column the file\n\n\n## AWK - indicate how to read the input and write the output\n\nNote the these can be specified by adding `BEGIN {}`:\n\n- FS - field separator - column delimiter\n\t- <span class=\"code\">`awk 'BEGIN {FS=\",\"} {print $2}' blastp_results.csv`</span>\n\t\t- Indicates the columns in the file blastp_results.csv are separated by commas and asks for the second column\n\t\t- Outside the `''` <span class=\"code\">`-F\",\"`</span> or <span class=\"code\">`--field-separator=\",\"`</span> are the same\n- OFS - output field separator - column delimiter for the output\n\t- <span class=\"code\">`awk 'BEGIN {OFS=\",\"} {print $1,$2,$3}' blastp_results.txt`</span>\n\t\t- Changes the separation of columns from space (default for awk) to commas\n\n## AWK - indicate how to read the input and write the output\n\nNote the these can be specified by adding `BEGIN {}`:\n\n- RS - record separator\n\t- <span class=\"code\">`awk 'BEGIN {RS=\">\"} {print $1}' myFasta.fasta`</span>\n\t\t- Tells awk that new entries are indicated with a \">\" symbol\n- ORS - record separator for the output\n\t- <span class=\"code\">`awk 'BEGIN {ORS=\">\"} {print $1}' myFasta.txt`</span>\n\t\t- Tells awk that new entries in the output will start with the \">\" symbol\n\n## AWK example\n\n- Sequence length\n\n```\nawk 'BEGIN {FS = \"\\n\"; RS=\">\"}\\\n {print $1, length($2)}' ~/blastClass/myFasta.fasta\n```\n\n\n## AWK example\n\n- Change fasta to a table format\n\n```\nawk 'BEGIN {FS = \"\\n\"; RS=\">\";\\\n OFS=\"\\t\"; ORS=\"\\n\"}\\\n {print $1,$2}' ~/blastClass/myFasta.fasta\n```\n\n\n## AWK - replace word\n\n- Replace the letter N in the sequence line by `'*'`\n\n```\nawk 'BEGIN {FS = \"\\n\"; RS=\">\"}\\\n {newSeq=gensub(/N/, \"*\", $2); print $1, newSeq}' ~/blastClass/myFasta.fasta\n```\n\n## AWK - print with one condition\n\n- Conditions inside `{}` come after `if` and inside `()` OR they go outside the `{}`\n\n```\n# Print line if column 3 has a value greater than 80\nawk '{if ($3 > 80) print}' ~/blastClass/myFasta.fasta\n```\n\n- Or they go outside the `{}`\n\n```\n# Print line if column 3 has a value greater than 80\nawk '$3 > 80 {print}' ~/blastClass/myFasta.fasta\n```\n\n## AWK - print with multiple conditions \n\n- When the conditions must all be met, separate them with `&&`\n\n### <b>\n<div class=\"code\">\n```\n# Print line if column 3 has a value greater than 80 AND column 4 has a value greater than 150\nawk '{if ($3 > 80 && $4 > 150) print}' ~/blastClass/myFasta.fasta\n\t\n# This also gives the same result\nawk '$3 > 80 && $4 > 150 {print}' ~/blastClass/myFasta.fasta\n```\n</div></b>\n\n\n## AWK - print with multiple conditions \n\n- When only one condition must be met, separate them with `||`\n\n```\n# Print line if column 3 has a value greater than 80 OR column 4 has a value greater than 150\nawk '{if ($3 > 80 || $4 > 150) print}' ~/blastClass/myFasta.fasta\n\nawk '$3 > 80 || $4 > 150 { print }' ~/blastClass/myFasta.fasta\n```\n\n\n## Resources \n\n- [AWK manual](https://www.gnu.org/software/gawk/manual/html_node/Options.html)\n- [AWK examples](https://www.geeksforgeeks.org/awk-command-unixlinux-examples/)\n- [AWK cheatsheet](https://www.shortcutfoo.com/app/dojos/awk/cheatsheet)\n- [AWK - working with text](https://www.tutorialspoint.com/awk/awk_string_functions.htm)\n"},"formats":{"revealjs":{"identifier":{"display-name":"RevealJS","target-format":"revealjs","base-format":"revealjs"},"execute":{"fig-width":10,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":true,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","html-math-method":{"method":"mathjax","url":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_HTML-full"},"slide-level":2,"to":"revealjs","output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":false,"quarto-version":"1.3.450","auto-stretch":true,"title-block-banner":true,"title":"AWK command","date":"2023-02-13","description":"5th unix class","fontsize":"1.5em","linkcolor":"grey","callout-appearance":"simple","categories":["Unix basics"],"author":"Karen Cristine Goncalves, Ph.D.","transition":"none","theme":"dark","scrollable":true}}},"projectFormats":["html"]}